#version 430

layout(local_size_x = 1) in;

struct BoidData {
    vec2 pos;
    vec2 vel;
    uint bucketIndex;
    uint gridIndex;
};

// Input buffers
layout(std430, binding = 3) readonly buffer Boids {
    BoidData boids[];
};

layout(std430, binding = 4) readonly buffer PrefixSums {
    uint prefixSums[];
};

layout(std430, binding = 5) readonly buffer BucketSizes {
    uint bucketSizes[];
};

// Output buffer
layout(std430, binding = 6) writeonly buffer ReorderedBoids {
    Boid reorderedBoids[];
};

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if (gid >= boids.length()) return;

    BoidData boid = boids[gid];

    uint baseIndex = boid.gridIndex;
    uint bucketIndex = boid.bucketIndex;

    // Place the boid in the reordered array
    reorderedBoids[baseIndex + bucketIndex] = boid;
}