#version 430

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct ParticleData {
    vec2 pos;
    vec2 vel;
    uint bucketIndex;
    uint gridIndex;
    vec2 data;
};

// Input buffers
layout(std430, binding = 3) readonly buffer ParticleBuffer {
    ParticleData particles[];
};

layout(std430, binding = 4) readonly buffer PrefixSumsBuffer {
    uint prefixSums[];
};

layout(std430, binding = 5) readonly buffer BucketSizesBuffer {
    uint bucketSizes[];
};

// Output buffer
layout(std430, binding = 6) writeonly buffer ReorderedParticlesBuffer {
    ParticleData reorderedParticles[];
};

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if (gid >= particles.length()) return;

    ParticleData particle = particles[gid];

    uint baseIndex = prefixSums[particle.gridIndex];
    uint bucketIndex = particle.bucketIndex;

    // Place the particle in the reordered array
    reorderedParticles[baseIndex + bucketIndex] = particle;
}